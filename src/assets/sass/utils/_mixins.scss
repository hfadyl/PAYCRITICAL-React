// Media Query (xs, sm, md, lg, xl)
@mixin mq($key) {
	$size: map-get($breakpoints, $key);
	@media only screen and (max-width: $size) {
		@content;
	}
}

// @mixin tablet{
// 	@media screen and (max-width: 768px) {
// 		@content;
// 	}
// }

// @mixin mobile{
// 	@media screen and (max-width: 280px) {
// 		@content;
// 	}
// }

// Pseudo-elements
@mixin pseudo($loc: before, $content: "", $position: absolute) {
	position: relative;

	&::#{$loc} {
		content: $content;
		position: $position;
		@content;
	}
}

// Ripple effect for buttons
@mixin ripple-effect {
	display: inline-block;
	overflow: hidden;

	@include pseudo($loc: before) {
		background-color: $background;
		padding: 50%;
		border-radius: 50%;
		left: 50%;
		top: 50%;
		// Detect clicked poinnt with js
		// left: calc(100% * var(--ripple-x));
		// top: calc(100% * var(--ripple-y));
		transform: translate(-50%, -50%) scale(1);
		opacity: 0;
		transition: transform 600ms, opacity 600ms;
		pointer-events: none;
	}

	&:active::before {
		transition: 0s;
		opacity: 1;
		transform: translate(-50%, -50%) scale(0);
	}
}

// Flexbox
@mixin flex($justify, $align) {
	display: flex;
	justify-content: $justify;
	align-items: $align;
}

// Set Font
@mixin font-source-sans($font: false, $size: false, $color: false, $weight: false, $lh: false) {
	@if $font {
		font-family: $font;
	}
	@if $size {
		font-size: $size;
	}
	@if $color {
		color: $color;
	}
	@if $weight {
		font-weight: $weight;
	}
	@if $lh {
		line-height: $lh;
	}
}

// Placeholder styling
@mixin input-placeholder {
	&.placeholder,
	&::placeholder,
	&:-moz-placeholder,
	&::-moz-placeholder,
	&:-ms-input-placeholder,
	&::-webkit-input-placeholder {
		@content;
	}
}

// Import fonts
@mixin font-face($family, $ttf-path) {
	@font-face {
		font-family: $family;
		src: url($ttf-path) format("truetype");
	}
}

// Show and hide an element
@mixin fade($type) {
	@if $type== "hide" {
		visibility: hidden;
		opacity: 0;
		transition: visibility 1s, opacity 1s;
		pointer-events: none;
	} @else if $type== "show" {
		visibility: visible;
		opacity: 1;
		transition: visibility 1s, opacity 1s;
		pointer-events: all;
	}
}

// Gap
@mixin gap($value, $direction: "row") {
	@if $direction == "row" {
		& > *:not(last-child) {
			margin-right: $value;
		}
	} @else if $direction == "column" {
		& > *:not(last-child) {
			margin-bottom: $value;
		}
	}
}

// For Text gradient colos
@mixin text-gradient($color-gradient){
	background: $color-gradient;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
}

// Hide Scroolbar
@mixin hideScroller {
	-ms-overflow-style: none;  /* IE and Edge */
	scrollbar-width: none;  /* Firefox */
	&::-webkit-scrollbar {
		display: none;
	}
}

// Text limit Overflow (3 points)
@mixin lines-limit($lines, $line-hight){
	overflow: hidden;
	text-overflow: ellipsis;
	display: -webkit-box;
	-webkit-line-clamp: $lines; // number of lines to show
	-webkit-box-orient: vertical;
	line-height: $line-hight;
}
